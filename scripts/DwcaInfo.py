#!/usr/bin/env python
"""
DwcaInfo return the InstitutionCode and CollectionCode of the first record of darwincore archive zipfile generated by gbif.org

"""

__title__ = 'DwcaInfo'
__author__ = 'Arturo Vargas <avargas@inbio.ac.cr>'


import sys
import zipfile
import lxml.etree as etree

reload(sys)
sys.setdefaultencoding('utf8')

class DwcaInfo:
    """Contain InstitutionCode, CollectionCode and dataset_title"""

    def __init__(self):
        self.institution_collection_codes = {}
        self.dataset_title    = ''

    def __get_institution_collection(self, file):
        """find institutionCode and collectionCode"""
        # header line
        line = file.readline()
        line = line.split('\t')
        institutionIndex = line.index('institutionCode')
        collectionIndex  = line.index('collectionCode')
   
        # iterate
        for line in file:
            line = line.split('\t')
            ins_code = line[institutionIndex]
            coll_code = line[collectionIndex]
            if ins_code not in self.institution_collection_codes:
                self.institution_collection_codes[ins_code] = []
            institutions = self.institution_collection_codes[ins_code]
            if coll_code not in institutions:
                institutions.append(coll_code)

        return self

    def __get_dataset_title(self, file):
        """ find dataset_title inside xml file """
        tree = etree.parse(file)
        root = tree.getroot()
        dataset_title = root.find('dataset').find('title')
        self.dataset_title = dataset_title.text
        return dataset_title.text

    def print_institution_code_tuples(self):
        for inst, colls in self.institution_collection_codes.iteritems():
            for coll in colls:
                print '{}|{}'.format(inst, coll)
        return self

    @classmethod
    def getDwcaInfo(cls, fileName):
        """Giving a Dwc-a zip file return DwcaInfo object"""
        zip = zipfile.ZipFile(fileName)
        file = zip.open('occurrence.txt')
    
        dwcaInfo = cls()

        cls.__get_institution_collection(dwcaInfo, file)
    
        # find dataset_title, assume one dataset in the file
        datasetFilename = ''
        for name in zip.namelist():
            if name.startswith('dataset/'): 
                datasetFilename = name
                break
    
        file = zip.open(datasetFilename)
        cls.__get_dataset_title(dwcaInfo, file)
    
        return dwcaInfo

# main code in case call came from command line
if __name__ == "__main__":
    try:
        fileName = sys.argv[1]

        dwcaInfo = DwcaInfo.getDwcaInfo(fileName)
        print 'dataset: {}'.format(dwcaInfo.dataset_title)
        dwcaInfo.print_institution_code_tuples()

    except IndexError:
        print "usage: %s dwc-a_zip_file\n" % sys.argv[0]
